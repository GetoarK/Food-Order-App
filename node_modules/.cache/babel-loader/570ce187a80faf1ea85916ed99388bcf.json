{"ast":null,"code":"var _jsxFileName = \"/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food-Order-App/src/Components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"../Meals/MealItem/MealItem\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n\n  const fetchMealsHandler = async () => {\n    try {\n      const response = await fetch(\"https://reactmovies-http-post-default-rtdb.europe-west1.firebasedatabase.app.json/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      } // Eftersom firebase ger oss objekt vill vi göra om det till en array som vi sedan mapar upp.\n\n\n      const responseData = await response.json();\n      console.log(responseData); // Här gör vi transformationen\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      const mealsList = loadedMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n        id: meal.id,\n        name: meal.name,\n        description: meal.description,\n        price: meal.price\n      }, meal.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this));\n      setMeals(mealsList);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food-Order-App/src/Components/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useEffect","AvailableMeals","props","meals","setMeals","useState","fetchMealsHandler","response","fetch","ok","Error","responseData","json","console","log","loadedMeals","key","push","id","name","description","price","mealsList","map","meal","error"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oFAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD,OAPC,CASF;;;AACA,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAXE,CAaF;;AACA,YAAMI,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBL,YAAlB,EAAgC;AAC9BI,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAER,YAAY,CAACK,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAET,YAAY,CAACK,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAEV,YAAY,CAACK,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AAED,YAAMC,SAAS,GAAGP,WAAW,CAACQ,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACN,EADX;AAGE,QAAA,IAAI,EAAEM,IAAI,CAACL,IAHb;AAIE,QAAA,WAAW,EAAEK,IAAI,CAACJ,WAJpB;AAKE,QAAA,KAAK,EAAEI,IAAI,CAACH;AALd,SAEOG,IAAI,CAACN,EAFZ;AAAA;AAAA;AAAA;AAAA,cADgB,CAAlB;AASAd,MAAAA,QAAQ,CAACkB,SAAD,CAAR;AACD,KAnCD,CAmCE,OAAOG,KAAP,EAAc,CAAE;AACnB,GArCD;;AAuCAzB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,sBACE;AAAS,IAAA,SAAS,EAAET,OAAO,CAACM,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,gBAAOmB;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnDD;;GAAMrB,c;;KAAAA,c;AAqDN,eAAeA,cAAf","sourcesContent":["import classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"../Meals/MealItem/MealItem\";\nimport { useEffect } from \"react\";\n\nconst AvailableMeals = (props) => {\n  const [meals, setMeals] = useState([]);\n\n  const fetchMealsHandler = async () => {\n    try {\n      const response = await fetch(\n        \"https://reactmovies-http-post-default-rtdb.europe-west1.firebasedatabase.app.json/\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      // Eftersom firebase ger oss objekt vill vi göra om det till en array som vi sedan mapar upp.\n      const responseData = await response.json();\n      console.log(responseData);\n\n      // Här gör vi transformationen\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      const mealsList = loadedMeals.map((meal) => (\n        <MealItem\n          id={meal.id}\n          key={meal.id}\n          name={meal.name}\n          description={meal.description}\n          price={meal.price}\n        />\n      ));\n      setMeals(mealsList);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  return (\n    <section className={classes.meals}>\n      <Card>{mealsList}</Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}