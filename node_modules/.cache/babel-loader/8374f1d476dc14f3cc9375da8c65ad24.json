{"ast":null,"code":"var _jsxFileName = \"/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food Order App (Sec 11)/src/Components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../Store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [buttonIsHighlighted, setButtonIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext); // Desctructa ut items from cartCtx så det kan användas i useEffect\n  // för att applicera classer varje gång ngt uppdateras i arrayen.\n\n  const {\n    items\n  } = cartCtx; // Detta är till för att lägga ihop alla items som är tillagda till cart genom array.reduce\n\n  const numberOfCartItems = items.reduce((currentNumb, item) => {\n    return currentNumb + item.amount;\n  }, 0);\n  const btnClasses = `${classes.button} ${buttonIsHighlighted ? classes.bump : \"\"}`;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n\n    setButtonIsHighlighted(true); // Eftersom animeringen på knappen endast sätts på när klassen först läggs till\n    // så måste vi sätta en timeOut för att ta bort klassen så att den kan\n    // läggas till igen (animeringen e 300ms så drf sätts den så)\n    // Eftersom vi i btnClasses la en dependency på klasserna\n\n    const timer = setTimeout(() => {\n      setButtonIsHighlighted(false);\n    }, 300); // Cleanup function om man hade lagt till många items snabbt  - detta för att denna kallas alltid om man returnar en funktion\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: btnClasses,\n      onClick: props.onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.icon,\n        children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Your Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.badge,\n        children: numberOfCartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(HeaderCartButton, \"+lfZMClbi6jiOkUVk/JbPl4tMEs=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food Order App (Sec 11)/src/Components/Layout/HeaderCartButton.js"],"names":["useContext","useEffect","useState","CartIcon","classes","CartContext","HeaderCartButton","props","buttonIsHighlighted","setButtonIsHighlighted","cartCtx","items","numberOfCartItems","reduce","currentNumb","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMQ,OAAO,GAAGV,UAAU,CAACK,WAAD,CAA1B,CAFkC,CAIlC;AACA;;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYD,OAAlB,CANkC,CAQlC;;AACA,QAAME,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC5D,WAAOD,WAAW,GAAGC,IAAI,CAACC,MAA1B;AACD,GAFyB,EAEvB,CAFuB,CAA1B;AAIA,QAAMC,UAAU,GAAI,GAAEb,OAAO,CAACc,MAAO,IACnCV,mBAAmB,GAAGJ,OAAO,CAACe,IAAX,GAAkB,EACtC,EAFD;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AACDX,IAAAA,sBAAsB,CAAC,IAAD,CAAtB,CAJc,CAMd;AACA;AACA;AACA;;AAEA,UAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7Bb,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,KAFuB,EAErB,GAFqB,CAAxB,CAXc,CAed;;AACA,WAAO,MAAM;AACXc,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACV,KAAD,CAnBM,CAAT;AAqBA,sBACE;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAEM,UAAnB;AAA+B,MAAA,OAAO,EAAEV,KAAK,CAACiB,OAA9C;AAAA,8BACE;AAAM,QAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAzB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,SAAS,EAAErB,OAAO,CAACsB,KAAzB;AAAA,kBAAiCd;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAjDD;;GAAMN,gB;;KAAAA,gB;AAmDN,eAAeA,gBAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../Store/cart-context\";\n\nconst HeaderCartButton = (props) => {\n  const [buttonIsHighlighted, setButtonIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  // Desctructa ut items from cartCtx så det kan användas i useEffect\n  // för att applicera classer varje gång ngt uppdateras i arrayen.\n  const { items } = cartCtx;\n\n  // Detta är till för att lägga ihop alla items som är tillagda till cart genom array.reduce\n  const numberOfCartItems = items.reduce((currentNumb, item) => {\n    return currentNumb + item.amount;\n  }, 0);\n\n  const btnClasses = `${classes.button} ${\n    buttonIsHighlighted ? classes.bump : \"\"\n  }`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setButtonIsHighlighted(true);\n\n    // Eftersom animeringen på knappen endast sätts på när klassen först läggs till\n    // så måste vi sätta en timeOut för att ta bort klassen så att den kan\n    // läggas till igen (animeringen e 300ms så drf sätts den så)\n    // Eftersom vi i btnClasses la en dependency på klasserna\n\n    const timer = setTimeout(() => {\n      setButtonIsHighlighted(false);\n    }, 300);\n\n    // Cleanup function om man hade lagt till många items snabbt  - detta för att denna kallas alltid om man returnar en funktion\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n\n  return (\n    <>\n      <button className={btnClasses} onClick={props.onClick}>\n        <span className={classes.icon}>\n          <CartIcon />\n        </span>\n        <span>Your Cart</span>\n        <span className={classes.badge}>{numberOfCartItems}</span>\n      </button>\n    </>\n  );\n};\n\nexport default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}