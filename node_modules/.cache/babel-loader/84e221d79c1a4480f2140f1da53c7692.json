{"ast":null,"code":"var _jsxFileName = \"/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food Order App (Sec 11)/src/Components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport { useContext } from \"react\";\nimport cartContext from \"../../Store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(cartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    const remainingItems = cartCtx.items.map(item => {\n      if (id === item.id) {\n        r;\n      }\n    });\n  };\n\n  const cartItemAddHandler = item => {};\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      id: item.id,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null.item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button-alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: `${!hasItems}`,\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/getoar/Documents/Frontendutbildning/React - The Complete Guide/Food Order App (Sec 11)/src/Components/Cart/Cart.js"],"names":["classes","Modal","CartItem","useContext","cartContext","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","remainingItems","map","item","r","cartItemAddHandler","cartItems","amount","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGJ,UAAU,CAACC,WAAD,CAA1B;AAEA,QAAMI,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpC,UAAMC,cAAc,GAAGR,OAAO,CAACI,KAAR,CAAcK,GAAd,CAAmBC,IAAD,IAAU;AACjD,UAAIH,EAAE,KAAKG,IAAI,CAACH,EAAhB,EAAoB;AAClBI,QAAAA,CAAC;AACF;AACF,KAJsB,CAAvB;AAKD,GAND;;AAQA,QAAMC,kBAAkB,GAAIF,IAAD,IAAU,CAAE,CAAvC;;AAEA,QAAMG,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEpB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGO,OAAO,CAACI,KAAR,CAAcK,GAAd,CAAmBC,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACH,EAFX;AAGE,MAAA,MAAM,EAAEG,IAAI,CAACI,MAHf;AAIE,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAJd;AAKE,MAAA,QAAQ,EAAET,qBAAqB,CAACU,IAAtB,CAA2B,KAAKN,IAAL,CAAUH,EAArC,CALZ;AAME,MAAA,KAAK,EAAEK,kBAAkB,CAACI,IAAnB,CAAwB,IAAxB,EAA8BN,IAA9B;AANT,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACkB,OAAtB;AAAA,eACGJ,SADH,eAEE;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAACyB,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOjB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAER,OAAO,CAAC0B,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE1B,OAAO,CAAC,YAAD,CAA1B;AAA0C,QAAA,OAAO,EAAEM,KAAK,CAACkB,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,QAAQ,EAAG,GAAE,CAACd,QAAS,EAA/B;AAAkC,QAAA,SAAS,EAAEV,OAAO,CAAC2B,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDD;;GAAMtB,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport { useContext } from \"react\";\nimport cartContext from \"../../Store/cart-context\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(cartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    const remainingItems = cartCtx.items.map((item) => {\n      if (id === item.id) {\n        r;\n      }\n    });\n  };\n\n  const cartItemAddHandler = (item) => {};\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          id={item.id}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null.item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  return (\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button-alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n        <button disabled={`${!hasItems}`} className={classes.button}>\n          Order\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}